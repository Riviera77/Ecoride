networks:
  Ecoride_network:
    driver: bridge

services:

  php:
    container_name: php_ecoride
    build:
      context: .
      dockerfile: Dockerfile.local
    volumes:
      - .:/var/www/html/
    depends_on:
      database:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - Ecoride_network
  
  web:
    image: nginx:alpine
    container_name: nginx_ecoride
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - .:/var/www/html
    ports:
      - 8081:80
    depends_on:
      - php
    networks:
      - Ecoride_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: db_ecoride
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - Ecoride_network
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally
      # remove the volume and lose all your data!
      - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  mongo:
    image: mongo:7.0.17-jammy
    container_name: mongo_ecoride
    restart: always
    ports:
      - "8090:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: ["--auth"]
    volumes:
      - mongo_data:/data/db
    networks:
      - Ecoride_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
  
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog_ecoride
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - Ecoride_network

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
  mongo_data:
###< doctrine/doctrine-bundle ###

  
